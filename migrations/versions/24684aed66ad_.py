"""empty message

Revision ID: 24684aed66ad
Revises: 
Create Date: 2021-02-16 01:52:17.952878

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '24684aed66ad'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('people',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('aliases', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('photographs', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('persons_phone_numbers', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('current_physical_living_address_1', sa.String(), nullable=True),
    sa.Column('current_physical_living_address_2', sa.String(), nullable=True),
    sa.Column('current_physical_living_address_city', sa.String(), nullable=True),
    sa.Column('current_physical_living_address_state', sa.String(), nullable=True),
    sa.Column('current_physical_living_address_zip_code', sa.String(), nullable=True),
    sa.Column('past_physical_living_addresses', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('locations_frequent', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('current_gps_location', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('vehicles', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('social_security_number_salt', sa.String(), nullable=True),
    sa.Column('social_security_number_hash', sa.String(), nullable=True),
    sa.Column('drivers_license_or_state_id_state', sa.String(), nullable=True),
    sa.Column('drivers_license_or_state_id_number', sa.String(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('eye_color', sa.String(), nullable=True),
    sa.Column('hair_color', sa.String(), nullable=True),
    sa.Column('race', sa.String(), nullable=True),
    sa.Column('tattoos', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('scars', sa.String(), nullable=True),
    sa.Column('marks', sa.String(), nullable=True),
    sa.Column('contacts', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('audit_trail', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('incidents', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('allergies', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('medical_conditions', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('mental_health_conditions', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('languages', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('medications', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('appointments', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('safety_information', sa.String(), nullable=True),
    sa.Column('deescalation_instructions', sa.String(), nullable=True),
    sa.Column('documents', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email_address', sa.String(), nullable=True),
    sa.Column('emailed_verification_code', sa.String(), nullable=True),
    sa.Column('datetime_verification_code_created', sa.DateTime(), nullable=False),
    sa.Column('is_professional', sa.Boolean(), nullable=True),
    sa.Column('person_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['people.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_address'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('people')
    # ### end Alembic commands ###
